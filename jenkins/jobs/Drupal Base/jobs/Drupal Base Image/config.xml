<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Base Image</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>Version</name>
          <description>Please select a drupal version for use</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>drupal-7.34</string>
              <string>drupal-6.34</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.2">
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;
        #to save time I am just going to use existing images for most of this.
        #for the real system we&apos;d want to have a real image store of our very own.
        FROM centurylink/apache-php:latest
        MAINTAINER CenturyLink

        # Install packages
        RUN apt-get update &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get -y upgrade &amp;&amp; \
        DEBIAN_FRONTEND=noninteractive apt-get -y install supervisor pwgen &amp;&amp; \
        apt-get -y install mysql-client &amp;&amp; \
        apt-get -y install postgresql-client

        # Download v7.34 of Drupal into /app
        RUN rm -fr /app &amp;&amp; mkdir /app &amp;&amp; cd /app &amp;&amp; \
        curl -O http://ftp.drupal.org/files/projects/drupal-7.34.tar.gz &amp;&amp; \
        tar -xzvf drupal-7.34.tar.gz &amp;&amp; \
        rm drupal-7.34.tar.gz &amp;&amp; \
        mv drupal-7.34/* drupal-7.34/.htaccess ./ &amp;&amp; \
        mv drupal-7.34/.gitignore ./ &amp;&amp; \
        rmdir drupal-7.34

        #Config and set permissions for setting.php
        RUN cp app/sites/default/default.settings.php app/sites/default/settings.php &amp;&amp; \
        chmod a+w app/sites/default/settings.php &amp;&amp; \
        chmod a+w app/sites/default

        EXPOSE 80

        CMD exec supervisord -n

        &quot; &gt; Dockerfile
      </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>sudo docker build -t drupalbaseimage .</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>